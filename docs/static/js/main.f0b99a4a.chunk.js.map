{"version":3,"sources":["components/Home/index.jsx","services/tweetjs.js","components/Tweets/index.jsx","components/App/index.jsx","index.js"],"names":["Home","TweetJs","ListTweetsOnUserTimeline","screenName","callback","_callApi","Action","ScreenName","Search","query","Query","request","xhr","XMLHttpRequest","URL","open","onreadystatechange","this","readyState","DONE","status","JSON","parse","response","send","stringify","Tweets","data","props","updateTweets","tweets","className","map","id","tweetId","key","options","width","Component","App","tweetsResponse","setState","statuses","id_str","state","to","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"yTAGe,SAASA,IACtB,OAAO,qCCAF,IAAMC,EAAU,CACrBC,yBAA0B,SAASC,EAAYC,GAC7CH,EAAQI,SACN,CACEC,OAAQ,2BACRC,WAAYJ,GAEdC,IAGJI,OAAQ,SAASC,EAAOL,GACtBH,EAAQI,SACN,CACEC,OAAQ,SACRI,MAAOD,GAETL,IAGJC,SAAU,SAASM,EAASP,GAC1B,IAAIQ,EAAM,IAAIC,eACdC,IAAM,mCACNF,EAAIG,KAAK,OAAQD,KACjBF,EAAII,mBAAqB,WACnBC,KAAKC,aAAeL,eAAeM,MAAwB,MAAhBF,KAAKG,QAClDhB,EAASiB,KAAKC,MAAMV,EAAIW,YAG5BX,EAAIY,KAAKH,KAAKI,UAAUd,M,QC3BPe,G,kMACE,IAAD,OAClBzB,EAAQO,OAAO,eAAgB,SAAAmB,GAC7B,EAAKC,MAAMC,aAAaF,O,+BAIlB,IACAG,EAAWb,KAAKW,MAAhBE,OACR,OACE,wBAAIC,UAAU,eACXD,EAAOE,IAAI,SAAAC,GAAE,OACZ,wBAAIF,UAAU,eACZ,kBAAC,IAAD,CACEG,QAASD,EACTE,IAAKF,EACLG,QAAS,CAAEC,MAAO,mB,GAhBIC,cCgDrBC,E,YA9Cb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KAMRC,aAAe,SAAAW,GACb,EAAKC,SAAS,CACZX,OAAQU,EAAeE,SAASV,IAAI,qBAAGW,YAPzC,EAAKC,MAAQ,CACXd,OAAQ,IAHO,E,sEAaT,IAAD,OACCA,EAAWb,KAAK2B,MAAhBd,OACR,OACE,yBAAKC,UAAU,OACb,gCACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMc,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,cAKR,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhD,IACjC,kBAAC,IAAD,CACE8C,OAAK,EACLC,KAAK,UACLE,OAAQ,kBACN,kBAAC,EAAD,CAAQpB,aAAc,EAAKA,aAAcC,OAAQA,c,GArC/CQ,aCDlBY,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFE,SAASC,eAAe,W","file":"static/js/main.f0b99a4a.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.scss';\n\nexport default function Home() {\n  return <div>Home</div>;\n}\n","// TweetJS.com - Display your tweets on your website using Javascript alone\r\n// Copyright 2019 Infinite Loop Development Ltd - InfiniteLoop.ie\r\n// Do not remove this notice.\r\n\r\nexport const TweetJs = {\r\n  ListTweetsOnUserTimeline: function(screenName, callback) {\r\n    TweetJs._callApi(\r\n      {\r\n        Action: 'ListTweetsOnUserTimeline',\r\n        ScreenName: screenName\r\n      },\r\n      callback\r\n    );\r\n  },\r\n  Search: function(query, callback) {\r\n    TweetJs._callApi(\r\n      {\r\n        Action: 'Search',\r\n        Query: query\r\n      },\r\n      callback\r\n    );\r\n  },\r\n  _callApi: function(request, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    URL = 'https://www.tweetjs.com/API.aspx';\r\n    xhr.open('POST', URL);\r\n    xhr.onreadystatechange = function() {\r\n      if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\r\n        callback(JSON.parse(xhr.response));\r\n      }\r\n    };\r\n    xhr.send(JSON.stringify(request));\r\n  }\r\n};\r\n","import React, { Component } from 'react';\nimport { TweetJs } from '../../services/tweetjs';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\nimport './Tweets.scss';\n\nexport default class Tweets extends Component {\n  componentDidMount() {\n    TweetJs.Search('%23superbowl', data => {\n      this.props.updateTweets(data);\n    });\n  }\n\n  render() {\n    const { tweets } = this.props;\n    return (\n      <ul className=\"tweet__list\">\n        {tweets.map(id => (\n          <li className=\"tweet__item\">\n            <TwitterTweetEmbed\n              tweetId={id}\n              key={id}\n              options={{ width: '320px' }}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Home from '../Home/index';\nimport Tweets from '../Tweets/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: []\n    };\n  }\n\n  updateTweets = tweetsResponse => {\n    this.setState({\n      tweets: tweetsResponse.statuses.map(({ id_str }) => id_str)\n    });\n  };\n\n  render() {\n    const { tweets } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/tweets\">Tweets</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route\n              exact\n              path=\"/tweets\"\n              render={() => (\n                <Tweets updateTweets={this.updateTweets} tweets={tweets} />\n              )}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/index';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}